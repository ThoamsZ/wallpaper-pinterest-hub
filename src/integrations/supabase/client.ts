
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://begjbzrzxmbwsrniirao.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJlZ2pienJ6eG1id3NybmlpcmFvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzg1OTUzODgsImV4cCI6MjA1NDE3MTM4OH0.M12TudEZqwnImyu1EvQ0Ha-s3fsHafx9ZxWsD8FCc98";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function for checking if a table exists
export const checkTableExists = async (tableName: string): Promise<boolean> => {
  try {
    // Try a simple query with limit 0 to see if the table exists
    const { error } = await supabase
      .from(tableName)
      .select('count', { count: 'exact', head: true });
    
    // If there's an error with code 42P01, the table doesn't exist
    if (error && (error.code === '42P01' || error.message.includes('relation "public.' + tableName + '" does not exist'))) {
      console.log(`Table ${tableName} does not exist`);
      return false;
    }
    
    // If we get here, the table exists
    return true;
  } catch (error: any) {
    // Log the error but don't throw it
    console.error(`Error checking if table ${tableName} exists:`, error);
    
    // If the error message indicates the table doesn't exist, return false
    if (error.message && (
      error.message.includes('42P01') || 
      error.message.includes('relation') || 
      error.message.includes('does not exist')
    )) {
      return false;
    }
    
    // For other errors, assume the table might exist
    return false;
  }
};
